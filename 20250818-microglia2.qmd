---
title: "Differences in microglia by sample & treatment"
subtitle: ""
date: today
dpi: 300
embed-resources: true
execute: 
  warning: false
  echo: false
editor_options: 
  chunk_output_type: console
---

```{r}

library(tidyverse)
library(Seurat)
library(scCustomize) # https://samuel-marsh.github.io/scCustomize/
library(patchwork)
library(kableExtra)
library(compareGroups)
library(pheatmap)

# load the previously saved reclustered object 
load("data/20250818-microglia_reclustered_reintegrated.Rdata")
microglia <- subset(microglia, idents = "8", invert =T)


new_cluster_names <- c(
  "NFkB/IEG Activated",
  "Homeostatic (Activation competent)",
  "DAM (Early/Intermediate)",
  "Remodeling / Injury response",
  "Homeostatic (canonical)",
  "DAM (late)",
  "Antigen presenting",
  "Interferon responsive",
  "Proliferating"
)

microglia <- Rename_Clusters(microglia,
                new_ident_name = "final_clusters_clean",
                new_idents = new_cluster_names,
                overwrite = T)




```

## Total microglia states

Uniform Manifold Approximation and Projection (UMAP) visualization of `r ncol(microglia)` microglial cells.

Each point represents a single cell, and cells are colored according to unsupervised clusters identified from transcriptomic profiles.

```{r}
#| column: page
#| fig-width: 12

#############################################################################
### UMAP
#############################################################################

Idents(microglia) <- "final_clusters_clean"

d1 <- DimPlot(microglia, label = F) +
    scale_colour_brewer(palette = "Paired")+
    labs(title = "Microglia States") +
    theme(plot.title = element_text(size=16, hjust = 0.5))+
    NoAxes()

d1
```

## Total cells

Bar plot showing the number of cells assigned to each cluster.

```{r}
## helper functions
source("20250725-helper_functions.R")
# use scProp_help()

microglia_prop <- scProp(microglia,
                         cluster_col = "final_clusters_clean",
                         sample_col = 'Mouse.ID',
                         treatment_col = "Treatment.Group")
```

```{r}
microglia_prop$counts_plot
```

## Gene Heatmap & hierarchical cluster

Heatmap of normalized expression levels for representative marker genes across clusters, with hierarchical clustering applied to both genes and clusters, providing an overview of the molecular signatures that distinguish microglial states.

```{r}
#| column: page
#| fig-width: 12
#############################################################################
####### Heatmap & hierarchical cluster
#############################################################################

markers_microglia_clean <- FindAllMarkers(microglia, min.pct = 0.3,
                                     only.pos = F, densify = TRUE)


feat <- markers_microglia_clean|>  
    filter(pct.1 > 0.3) |> 
    arrange(cluster, p_val_adj) |> 
    group_by(cluster) |> 
    slice_head(n = 5)|> 
    pull(unique(gene))


# When return.seurat = TRUE and layer is 'scale.data', the 'counts' layer contains
# average counts and 'scale.data' is set to the averaged values of 'scale.data'.
avg_expression <- AverageExpression( microglia,
  assays = "SCT", 
  layer = "scale.data", 
  group.by = "final_clusters_clean",
  return.seurat = T
)




data4cluster <- FetchData(avg_expression,c(feat,"P2ry12","Tmem119"), layer = "scale.data") |> 
    mutate(across(everything(), \(x) ifelse(x>9,9,x)))
           



    
pheatmap(data4cluster,
         color = colorRampPalette(c("blue", "white", "yellow","orange" ,"red"))(100),
          cellwidth = 12, cellheight = 10,
          angle_col = 45, row.names=T) 
 


```

## Proportions (%) of Microglial States Across Samples and Treatments

```{r}
#| fig-width: 10
#| fig-height: 4
microglia_prop$proportions_plot
```

Stacked barplot of the relative abundance of each microglial Seurat-defined cluster in individual samples and compared proportions between the Aducanumab-treated and IgG control groups.\

------------------------------------------------------------------------

```{r}
# Compare all variables in 'cell' across treatment groups using compareGroups
export2md(microglia_prop$summary_table, caption = "")
```

Values are median % of microglia in that cluster per sample, with IQR.\
p.overall: Mann-Whitney p-value

## Module scores

UMAP displaying the combined expression scores or the distribution of individual canonical microglial marker genes, illustrating the transcriptional features that define each cluster.

```{r}

# Define gene signatures for different microglial subtypes based on literature
# Each signature contains marker genes that characterize specific microglial states
signatures <- list()
signatures$TIM <- c("Klf4","Malat1","Tmx4","Jund","Btg2","Fasb","Jun","Fos","Klf2")
signatures$Homeostatic <- c("P2ry13","P2ry12","Cx3cr1","Cst3","Ltc4s","Bin1","Maf",
                            "Frmd4a","Csf1r","C1qa","Dock8","Stab1","Slcda5","Sparc")
signatures$AP <- c("Cd74","B2m","Cd37","Napil1","Lgals1","Rpl26","Rps19","Rps8","Tp11","Ftl",
                   "Rlp39","Rps4x","Rps15a","H2-Eb1", "H2-Ab1", "H2-Aa")
signatures$DAM <- c("Spp1","Lipa","Apoc1","Ccl3","Fabp5","Trem2","Cxcr4","Gpnmb","Litaf","Cstb",
                    "Rps18","Rpl11","Rpl37a","Axl","Dbi","Socs8")
signatures$CRM <- c("Il1b","Ch25h","Padi2","Il4l1","Plek","Tlr2","Junb","C3ar1","Nfkbia","Trem2","Tyrobp")
signatures$IRM <- c("Ifit2","Il1b","Epsti1","Eif2ak2","Bst2","Tnfsf10","Sp110","Irf1","Tap1","Il4l1","Adar",
                    "Cd48","Nampt")


# Set the default assay to SCT (SCTransform normalized data) for analysis
DefaultAssay(microglia) <- "SCT"

# Store signature names for later use in renaming columns
sig_names <- names(signatures)

# Filter signatures to only include genes present in the dataset
signatures <- map(signatures, \(g) intersect(g, rownames(microglia)))

# Calculate module scores for each signature 
# This computes the average expression of signature genes minus average expression of control genes
microglia <- AddModuleScore(
  object   = microglia,        # Seurat object
  features = signatures,       # List of gene signatures
  name     = "Sig",           # Prefix for new column names (Seurat will append 1,2,3...)
  nbin     = 24,              # Number of bins for background gene selection
  ctrl     = 100,             # Number of control genes per bin
  seed     = 1                # Random seed for reproducibility
)

# Rename the newly created score columns with meaningful names
# AddModuleScore creates columns named "Sig1", "Sig2", etc.
# We rename them to "<Signature_Name> Score"
n_new  <- length(signatures)  # Number of signatures
idx    <- (ncol(microglia@meta.data) - n_new + 1):ncol(microglia@meta.data)  # Index of new columns
colnames(microglia@meta.data)[idx] <- paste0(sig_names, " Score")

```

Markers from bibliography to generate the scores

```{r}
# Create a summary table showing genes in each signature
# This reshapes the signature list into a long format tibble for display
df_long <- imap_dfr(signatures, ~ tibble(Signature = .y, Gene = .x)) |> 
    group_by(Signature) |> 
    summarize(genes = paste(Gene, collapse=", ")) 

# Display the signature genes in a formatted table
kbl(df_long) |>
  kable_styling("striped")
```

---

Red dots indicate cells with high signature scores (__top 25%__), while grey represents cells with lower scores

```{r}
#| column: screen
#| fig-width: 15
#| fig-height: 4

# Create feature plots showing module scores across UMAP embedding
signature_plot <- FeaturePlot(microglia, 
                             features = c("DAM Score" ,"IRM Score","CRM Score",
                                        "TIM Score","Homeostatic Score","AP Score"),
                             min.cutoff = "q75",           # Only highlight top 25% of cells
                             cols = c("grey96","red"),     # Color scale: grey to red
                             split.by = "Treatment.Group", # Separate plots by treatment
                             combine = F) |>               # Return list of plots
    map(\(x) x + NoAxes() + NoLegend() + 
            theme(plot.title = element_text(size = 12, vjust = 0),
                  panel.border = element_blank()))

# Arrange plots in a 2-row layout
wrap_plots(signature_plot, nrow = 2)
```

Homeostatic  
DAM: Disease associated microglia   
AP : Antigen Presenting (HLA/MHC class II)  
IRM : Interferon-response microglia.\
CRM : Cytokine-Response microglia
Markers described in [@fumagalli2025]

--- 

TIM : Terminally inflammatory microglia [@millet2024]


## Microglia states according to [@fumagalli2025]

Using `AddModuleScore` in the previous step, each cell received a numerical score for each signature.   
Then, for each cell, the maximum score across all signatures was identified, and the corresponding label was assigned as its “dominant phenotype.” This categorical assignment was stored in the metadata under the identity class `score_cluster`.

```{r}
#| fig-column: page
#| fig-width: 12
#| fig-height: 10
# Assign each cell to the microglial state with the highest module score
# Extract module score columns from metadata
md <- microglia@meta.data |> 
    select(`Homeostatic Score`:`IRM Score`) 

# Find the signature with maximum score for each cell
max_col <- names(md)[max.col(md)] |> 
    str_remove(" Score")  # Remove " Score" suffix

# Add the assigned state as a new metadata column
microglia$score_cluster <- max_col

# Set the identity of cells to their assigned microglial state
Idents(microglia) <- "score_cluster"

# Create a UMAP plot colored by assigned microglial state
d2 <- DimPlot(microglia, label = F) +
    scale_colour_brewer(palette = "Paired") +     # Use paired color palette
    labs(title = "Microglia 5 States\nfrom bibliography") +
    theme(plot.title = element_text(size=16, hjust = 0.5)) +
    NoAxes()

d3 <- DimPlot(microglia, label = F, split.by = "Treatment.Group") +
    scale_colour_brewer(palette = "Paired") +     # Use paired color palette
    labs(title = "Microglia 5 States\nfrom bibliography") +
    theme(plot.title = element_text(size=16, hjust = 0.5)) +
    NoAxes()

# Display both plots side by side with the previous microglia states plot
(d1|d2)/d3
```

```{r}
prop2 <- scProp(microglia,
                cluster_col = "score_cluster",
                sample_col = 'Mouse.ID',
                treatment_col = 'Treatment.Group' )

prop2$proportions_plot
```


```{r}
export2md(prop2$summary_table)
```

